<?php

declare(strict_types=1);

namespace Fpp;

const dump = '\Fpp\dump';

function dump(DefinitionCollection $collection, callable $loadTemplate, callable $replace): string
{
    $code = <<<CODE
<?php

// this file is auto-generated by prolic/fpp
// don't edit this file manually

declare(strict_types=1);


CODE;

    foreach ($collection->definitions() as $definition) {
        $constructors = $definition->constructors();

        if (1 === count($constructors)) {
            $constructor = $constructors[0];
            $code .= $replace($definition, $constructor, $loadTemplate($definition, $constructor), $collection);
        } else {
            $createBaseClass = true;

            foreach ($constructors as $constructor) {
                if ($definition->namespace()) {
                    $name = str_replace($definition->namespace() . '\\', '', $constructor->name());
                } else {
                    $name = $constructor->name();
                }

                if ($definition->name() === $name) {
                    $createBaseClass = false;
                }

                $code .= $replace($definition, $constructor, $loadTemplate($definition, $constructor), $collection);
            }

            if ($createBaseClass) {
                $code .= $replace($definition, null, $loadTemplate($definition, null), $collection);
            }
        }
    }

    return substr($code, 0, -1);
}
